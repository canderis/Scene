/*
 * File: app/view/LoginPanel.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Modern library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Modern. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Scene.view.LoginPanel', {
	extend: 'Ext.Container',
	alias: 'widget.loginpanel',

	requires: [
		'Scene.view.LoginPanelViewModel',
		'Scene.view.ProfileCreationForm',
		'Ext.Button',
		'Ext.Toolbar',
		'Ext.field.Email',
		'Ext.field.Password',
		'Ext.field.Select',
		'Ext.form.Panel'
	],

	viewModel: {
		type: 'loginpanel'
	},
	itemId: 'LoginPanel',
	layout: 'vbox',
	defaultListenerScope: true,

	listeners: {
		initialize: 'onContainerInitialize'
	},
	items: [
		{
			xtype: 'button',
			hidden: true,
			itemId: 'mybutton4',
			text: 'getLocation',
			listeners: {
				tap: 'onMybutton4Tap'
			}
		},
		{
			xtype: 'toolbar',
			itemId: 'titleBar',
			docked: 'top',
			title: 'Scene',
			items: [
				{
					xtype: 'button',
					hidden: true,
					itemId: 'backButton',
					text: '<',
					listeners: {
						tap: 'onMybutton14Tap'
					}
				}
			]
		},
		{
			xtype: 'container',
			itemId: 'mainButtons',
			layout: 'fit',
			items: [
				{
					xtype: 'button',
					itemId: 'facebookLogin',
					text: 'Login With Facebook',
					listeners: {
						tap: 'onMybutton2Tap'
					}
				},
				{
					xtype: 'button',
					itemId: 'login_ui_btn',
					text: 'Login',
					listeners: {
						tap: 'onMybutton9Tap'
					}
				},
				{
					xtype: 'button',
					itemId: 'createAccountUIBtn',
					text: 'Create Account',
					listeners: {
						tap: 'onMybutton12Tap'
					}
				}
			]
		},
		{
			xtype: 'container',
			hidden: true,
			itemId: 'loginForm',
			margin: '5px',
			layout: 'vbox',
			items: [
				{
					xtype: 'emailfield',
					itemId: 'email_login',
					label: 'Email',
					placeHolder: 'email@example.com'
				},
				{
					xtype: 'passwordfield',
					itemId: 'pass_login',
					label: 'Password'
				},
				{
					xtype: 'button',
					itemId: 'loginBtn',
					text: 'Login',
					listeners: {
						tap: 'onLoginBtnTap'
					}
				}
			]
		},
		{
			xtype: 'container',
			hidden: true,
			itemId: 'createAccountForm',
			margin: '5px',
			layout: 'vbox',
			items: [
				{
					xtype: 'textfield',
					itemId: 'nameField',
					label: 'Name'
				},
				{
					xtype: 'selectfield',
					itemId: 'ageField',
					label: 'Age',
					options: [
						{
							text: '<18',
							value: '-18'
						},
						{
							text: '18 - 20',
							value: '18 - 20'
						},
						{
							text: '21 - 25',
							value: '21 - 25'
						},
						{
							text: '25 - 29',
							value: '25 - 29'
						},
						{
							text: '30+',
							value: '30+'
						}
					]
				},
				{
					xtype: 'emailfield',
					itemId: 'email',
					label: 'Email',
					placeHolder: 'email@example.com'
				},
				{
					xtype: 'passwordfield',
					itemId: 'pass',
					label: 'Password'
				},
				{
					xtype: 'passwordfield',
					itemId: 'passConf',
					label: 'Confirm Password'
				},
				{
					xtype: 'button',
					itemId: 'createBtn',
					text: 'Create Account',
					listeners: {
						tap: 'onCreateBtnTap'
					}
				}
			]
		},
		{
			xtype: 'profilecreationform',
			hidden: true,
			itemId: 'profileCreationForm',
			listeners: {
				finishedProfile: 'onFormpanelFinishedProfile'
			}
		}
	],

	onContainerInitialize: function(component, eOpts) {

		var me = this;

		me.up().mask();

		var panel = this;
		window.fbAsyncInit = function() {
		    FB.init({
				appId	: '1832851696981861',
				xfbml	: true,
				version	: 'v2.8',
		    });
			FB.AppEvents.logPageView();

			//FB.getLoginStatus(function(response) {
			//	console.log('panel', response);
			//	panel.handleFacebookLogin(response);
		    //});



			};

		  (function(d, s, id){
		     var js, fjs = d.getElementsByTagName(s)[0];
		     if (d.getElementById(id)) {
				 return;
			 }
		     js = d.createElement(s); js.id = id;
		     js.src = "//connect.facebook.net/en_US/sdk.js";
		     fjs.parentNode.insertBefore(js, fjs);

		   }(document, 'script', 'facebook-jssdk'));

		if (navigator.geolocation) {
			navigator.geolocation.getCurrentPosition(function(position){
				//console.log(position);
				me.position = position;
				me.up().unmask();
			}, function(error){
				me.position = {};
				me.position.coords = {};
				me.position.coords.latitude = 42.022773799999996;
				me.position.coords.longitude = -93.6480002;


				//console.log('here');
				Ext.Msg.alert('Geolocation Error', "This app requires location services. ");
				//console.log(error);

				me.up().unmask();
			});
		}

		//

		//setTimeout(function(){
			//console.log("here");
		//	;
	},

	onMybutton4Tap: function(button, e, eOpts) {
		//if (navigator.geolocation) {
		//	navigator.geolocation.getCurrentPosition(function(position){
		//		console.log(position);
		//	});
		//}
		/*
		console.log({
			accuracy:46
			,altitude:null
			,altitudeAccuracy:null
			,heading:null
			,latitude:42.0278208
			,longitude:-93.64894819999999
			,speed:null
		});
		*/
	},

	onMybutton14Tap: function(button, e, eOpts) {
		this.queryById('createAccountForm').hide();
		this.queryById('loginForm').hide();
		this.queryById('mainButtons').show();
		button.hide();
	},

	onMybutton2Tap: function(button, e, eOpts) {
		var me = this;

		FB.login(
			function(response){
				me.handleFacebookLogin(response);
			},
			{scope: 'public_profile,email'}
		);
	},

	onMybutton9Tap: function(button, e, eOpts) {
		this.queryById('backButton').show();
		this.queryById('mainButtons').hide();
		this.queryById('loginForm').show();
	},

	onMybutton12Tap: function(button, e, eOpts) {
		this.queryById('backButton').show();
		this.queryById('mainButtons').hide();
		this.queryById('createAccountForm').show();
	},

	onLoginBtnTap: function(button, e, eOpts) {
		AERP.Ajax.request({
			url:'/SceneRequest/handleNonFacebookLogin',
			params: {
				email: this.queryById('email_login').getValue(),
				pass: this.queryById('pass_login').getValue(),
				latitude: this.position.coords.latitude,		//42.0278208,
				longitude:this.position.coords.longitude		//-93.64894819999999

			},
			success:function(response) {
				//console.log(response);
				this.loadNewPage(response);
			},
			failure:function(response) {

			},
			scope:this
		});
	},

	onCreateBtnTap: function(button, e, eOpts) {
		var password = this.queryById('pass').getValue();
		var passwordConf = this.queryById('passConf').getValue();
		if(password !== passwordConf){
			Ext.Msg.alert('Passwords do not match!', "Please retry your passwords.");
			return;
		}
		AERP.Ajax.request({
			url:'/SceneRequest/createUserAccount',
			params: {
				name: this.queryById('nameField').getValue(),
				age: this.queryById('ageField').getValue(),
				email: this.queryById('email').getValue(),
				password:password,
				passwordConfirm:passwordConf
			},
			success:function(response) {
				//console.log(response.data);
				this.userId = response.data.id;
				this.queryById('createAccountForm').hide();
				this.queryById('titleBar').hide();
				this.queryById('profileCreationForm').show();
			},
			failure:function(response) {
				//console.log('here',response);
			},
			scope:this
		});
	},

	onFormpanelFinishedProfile: function(profile) {
		AERP.Ajax.request({
			url:'/SceneRequest/submitProfile',
			params:{
				data:JSON.stringify(profile),
				userId:this.userId,
				latitude: this.position.coords.latitude,		//42.0278208,
				longitude:this.position.coords.longitude		//-93.64894819999999
			},success:function(response) {
				this.loadNewPage(response);

			},
			failure:function(response) {

			},
			scope:this
		});
		//
	},

	handleFacebookLogin: function(response) {
		FBStatus = response;
		//console.log(response);
		if (FBStatus.status === 'connected'){
			//console.log("logged in");
			AERP.Ajax.request(
			{
				url:'/SceneRequest/handleFacebookLogin',
				params: {
					signed_request:	response.authResponse.signedRequest,
					token:			response.authResponse.accessToken,
					latitude: this.position.coords.latitude,		//42.0278208,
					longitude:this.position.coords.longitude		//-93.64894819999999
				},
				success:function(response) {
					//console.log(response);
					this.loadNewPage(response);
					/*
					if(!this.mainViewPanel){
						this.mainViewPanel = Ext.create('Scene.view.MainView');
					}

					//accountInfo = response.data.accountInfo;
					//this.mainViewPanel.accountInfo = response.data;
					this.mainViewPanel.loginPanel = this;
					this.mainViewPanel.loadSuggestedList(response.data.userInfo, response.data.suggestedList);
					Ext.Viewport.add(this.mainViewPanel);
					Ext.Viewport.setActiveItem(this.mainViewPanel);
					*/

				},
				failure:function(response) {

				},
				scope:this
			});
		}
		else if (FBStatus.status === 'not_authorized') {
			//console.log("not authorized");
		}
		else{
			//console.log('unknown',response);
		}
	},

	loadNewPage: function(response) {
		if(!this.mainViewPanel){
			this.mainViewPanel = Ext.create('Scene.view.MainView');
		}

		//accountInfo = response.data.accountInfo;
		//this.mainViewPanel.accountInfo = response.data;
		this.mainViewPanel.loginPanel = this;
		this.mainViewPanel.loadSuggestedList(response.data.userInfo, response.data.suggestedList, response.data.interestedList );
		Ext.Viewport.add(this.mainViewPanel);
		Ext.Viewport.setActiveItem(this.mainViewPanel);
	}

});